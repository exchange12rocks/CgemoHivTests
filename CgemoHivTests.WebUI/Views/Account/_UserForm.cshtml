@model CgemoHivTests.BusinessLogic.DTO.UserDTO

@{
    object userNameHtmlAttr = new { htmlAttributes = new { @class = "form-control", @required = "required" } };
}
@if (TempData["result"] != null)
{
    @Html.Hidden("resultChangePassword", TempData["result"].ToString())
}

@using (Ajax.BeginForm("Save", new AjaxOptions { OnSuccess = "OnSaveSuccess" })) 
{
    @Html.AntiForgeryToken()
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">@ViewBag.DialogTitle</h4>
        </div>
        <div id="formMessageBox"></div>  
        <div class="modal-body">
            @Html.ValidationSummary()
            @Html.EditorFor(model => model.UserId)
            <div class="form-group has-feedback">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @if (Model.UserId != Guid.Empty) { userNameHtmlAttr = new { htmlAttributes = new { @class = "form-control", 
                        @required = "required", @readonly="readonly" } }; }
                    @Html.EditorFor(model => model.UserName, userNameHtmlAttr)                 
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>                                       
                </div>                            
            </div>
            <div class="form-group has-feedback">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"></span>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>                
            </div>            
            @if (Model.UserId == Guid.Empty)
            {
                <div class="form-group has-feedback">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    </div>
                </div>
                <div class="form-group has-feedback">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"></span>
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <button id="btnChangePassword" type="button" class="btn btn-sm btn-danger" onclick="ChangePassword('@Model.UserName')">Изменить пароль</button>
                </div>               
                <div id="messageBox2"></div>
            }                          
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        @Html.EditorFor(model => model.IsApproved)            
                        @Html.DisplayNameFor(model => model.IsApproved)                      
                    </label>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <div class="container-fluid">
                <div class="row">
                    @if(Model != null && Model.IsLockedOut) { <div class="col-sm-1"><button type="button" class="btn btn btn-warning">Разблокировать</button></div> }
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" id="save" class="btn btn-primary">Save changes</button>                 
                </div>
            </div>
        </div>
    </div><!-- /.modal-content -->
}